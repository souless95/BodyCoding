<?xml version="1.0" encoding="UTF-8"?>

<!-- Mapper파일을 구성하기 위한 Doctype 설정 -->
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.bc.bodycoding.board.memboardService">
	   
	<!--  잘되던거
	<select id="memselect" resultType="global.dto.BoardDTO" parameterType="global.dto.BoardDTO">
	 <![CDATA[
	  SELECT *
	  FROM (
	      SELECT ROWNUM AS RNUM, fb.*
	      FROM (
	          SELECT * 
	          FROM freeboard fb
	          WHERE 
	            (board_title LIKE '%'||#{searchKeyword, jdbcType=VARCHAR}||'%') OR
	            (board_contents LIKE '%'||#{searchKeyword, jdbcType=VARCHAR}||'%') OR
	            (mem_id LIKE '%'||#{searchKeyword, jdbcType=VARCHAR}||'%')
	          ORDER BY board_category, board_idx DESC 
	      ) fb
	      WHERE ROWNUM <= #{pageStart} + #{perPageNum}
	  ) 
	  WHERE RNUM >= #{pageStart} + 1 
	  ]]>
	</select>
-->

	<select id="boardListCnt" resultType="int">
	  	select count(*) from freeboard
	</select>  

 	<select id="memselect" resultType="global.dto.BoardDTO" parameterType="global.dto.BoardDTO">
	        <![CDATA[
	       SELECT *
	         FROM (
	              SELECT ROWNUM AS RNUM, fb.*, m.mem_name
			  FROM (
			    SELECT * 
			    FROM freeboard fb
			    WHERE closed_chk = 'N' 
			    ORDER BY board_category, board_idx DESC 
			  ) fb
			  INNER JOIN member m ON fb.mem_id = m.mem_id
			  WHERE ROWNUM <= #{pageStart} + #{perPageNum}
			) 
			WHERE RNUM >= #{pageStart} + 1 
			]]>
	</select> 

	<select id="boardListCnt1" resultType="int" parameterType="com.bc.bodycoding.board.Criteria">
	  	select count(*) from freeboard WHERE 
			  	${searchType} LIKE '%'||#{searchKeyword}||'%'
	</select>
	
	<!-- 게시글 상세보기 -->
 	<select id="memselect1" resultType="global.dto.BoardDTO" parameterType="com.bc.bodycoding.board.Criteria">
        <![CDATA[
       SELECT fb.*, m.mem_name as mem_name
         FROM (
              SELECT ROWNUM AS RNUM, fb.*
		  FROM (
		    SELECT * 
		    FROM freeboard fb
		    WHERE 
		      (${searchType} LIKE '%'||#{searchKeyword}||'%')
		      AND (closed_chk = 'N') 
		    ORDER BY board_category, board_idx DESC 
		  ) fb
		   JOIN member m ON fb.mem_id = m.mem_id
		  WHERE ROWNUM <= #{pageStart} + #{perPageNum}
		) 
		WHERE RNUM >= #{pageStart} + 1 
		]]>
	</select> 

	<!-- 게시글 상세보기 -->
	<select id="memselectOneBoard"
		parameterType="global.dto.BoardDTO"
		resultType="global.dto.BoardDTO">
		<!-- select * from freeboard where board_idx=#{board_idx} -->
		SELECT FB.*, COUNT(R.board_idx) AS count, MAX(FB.closed_chk) AS closed_chk
			FROM freeboard FB
			LEFT JOIN report R ON FB.board_idx = R.board_idx
			WHERE FB.board_idx = #{board_idx}
			GROUP BY FB.board_idx, FB.board_category, FB.mem_id, FB.board_title, 
					FB.board_contents, FB.board_file, FB.board_visitcount,
					 FB.board_postdate, FB.closed_chk 
	</select>
	
	<!-- 신고하기 등록 -->
	<insert id="insertreport" parameterType="global.dto.BoardDTO">
		INSERT INTO report (
			report_idx, board_idx, reporter, report_content)
		VALUES 
			(bodycoding_seq.nextval, #{board_idx}, #{mem_id}, #{report_content})
	</insert> 
	
	<!-- 신고내용 보여주기(board_idx가 같은 번호의 신고내용 전부 foreach 출력 -->
	<select id="reportList"
		parameterType="global.dto.BoardDTO"
		resultType="global.dto.BoardDTO">
		select * from report where board_idx=#{board_idx}
	</select>
	
	<update id ="updateVisitCount" parameterType="global.dto.BoardDTO">
		update freeboard set board_visitcount = board_visitcount+1
		where board_idx = #{board_idx}
	</update>
	
	<!-- 게시글 삭제하기 (자게, 공지, 이벤트) -->
	<delete id="deleteboard"
		parameterType="global.dto.BoardDTO">
		delete from freeboard where board_idx=#{board_idx}
	</delete>
	
	<!-- 게시글 등록하기 -->
	<insert id="insertboard" parameterType="global.dto.BoardDTO">
		INSERT INTO freeboard (
			board_idx, mem_id, board_category, board_title, board_contents)
		VALUES 
			(bodycoding_seq.nextval, #{mem_id}, '자유', #{board_title}, #{board_contents})
	</insert> 
	
	<!-- 게시글 수정하기전에 등록된 데이터 가져오기 -->
	<select id="selectone" parameterType="String" resultType="global.dto.BoardDTO">
		 SELECT fb.*, m.mem_name as mem_name
	        FROM freeboard fb
	        JOIN member m ON fb.mem_id = m.mem_id
	        WHERE board_idx = #{board_idx}
	</select>
	
	<!-- 게시글 수정하기 (자게)-->
	<update id="updateboard" parameterType="global.dto.BoardDTO" >
		update freeboard set board_title = #{board_title},
		board_contents = #{board_contents}
		where board_idx= #{board_idx}
	</update> 
	
	<!-- 댓글 조회하기 -->	
	<select id="selectreply" parameterType="String" resultType="global.dto.BoardDTO">
		SELECT r.*, m.mem_name
			FROM reply r
			INNER JOIN freeboard fb ON r.board_idx = fb.board_idx
			INNER JOIN member m ON fb.mem_id = m.mem_id
			WHERE r.board_idx=#{board_idx}
			ORDER BY r.reply_idx DESC
	</select>
	
	<!-- 댓글 수정하기 -->
	<update id="updatereply" parameterType="global.dto.BoardDTO" >
		update reply set reply_cont = #{reply_cont}
		where reply_idx= #{reply_idx}
	</update>
	
	<!-- 댓글 작성하기 -->
	<insert id="insertreply" parameterType="global.dto.BoardDTO">
	    INSERT INTO reply (
	        reply_idx, board_idx,  mem_id, mem_name, reply_cont)
	    VALUES 
	        (bodycoding_seq.nextval, #{board_idx}, #{mem_id}, #{mem_name}, #{reply_cont})
	</insert>

	<!--  댓글 삭제  -->
	<delete id="deletereply" parameterType="global.dto.BoardDTO">
		delete from reply where reply_idx=#{reply_idx}
	</delete>
	
</mapper>


